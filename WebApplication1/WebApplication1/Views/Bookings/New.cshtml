@model WebApplication1.ViewModels.BookingsViewModel
@{
    ViewData["Title"] = "New Booking";
}

<br />
<h1>Create New Booking</h1>
<br />

@using (Html.BeginForm("SearchRoomAndDate", "Bookings")) //in the future, change the action to Create
{
    <div class="col-md-5">
        @* @Html.ValidationSummary(true, "", new { @class = "text-danger" }) *@
        <div class="form-group">
            @Html.LabelFor(m => m.Booking.BuildingId)
            @Html.DropDownListFor(m => m.Booking.BuildingId, ViewBag.BuildingList as SelectList, "Select Building", new { @class = "form-control", @id = "BuildingId" })
            @Html.ValidationMessageFor(m => m.Booking.BuildingId)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Booking.RoomId)
            @Html.DropDownListFor(m => m.Booking.RoomId, new SelectList(""), "Select Room", new { @class = "form-control", @id = "RoomId" })
            @Html.ValidationMessageFor(m => m.Booking.RoomId)
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.Booking.BookDate)
            @Html.EditorFor(m => m.Booking.BookDate, "{0:yyyy-MM-dd}", new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(m => m.Booking.BookDate)
        </div>

        @*
                <div class="form-group">
                @Html.LabelFor(m => m.Booking.TimeSlotId)
                @Html.EditorFor(m => m.Booking.TimeSlotId, new { htmlAttributes = new { @class = "form-control" } })
            </div>
        *@

        <div class="form-group">
            @Html.LabelFor(m => m.Booking.StaffName)
            @Html.EditorFor(m => m.Booking.StaffName, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        @*Include faculty text box as well?*@

        <div class="form-group">
            @Html.LabelFor(m => m.Booking.ModuleCode)
            @Html.EditorFor(m => m.Booking.ModuleCode, new { htmlAttributes = new { @class = "form-control" } })
        </div>

        <div class="float-right">
            <button onclick="goBack()" class="btn btn-secondary">Back</button>
            <button type="submit" class="btn btn-primary">Next</button>
        </div>
    </div>
}

@section Scripts {
    <link href="https://ajax.aspnetcdn.com/ajax/jquery.ui/1.12.1/themes/smoothness/jquery-ui.css" rel="stylesheet" />
    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/jquery-ui-1.12.1.custom/jquery-ui-1.12.1.custom/jquery-ui.min.js"></script>

    <script>
        @*jQuery Datepicker*@
        @*$(document).ready(function () {
            $("#BookDate").datepicker().datepicker("setDate", new Date());
        })*@

        @*Cascading drop down list*@
        $(document).ready(function () {
            $("#BuildingId").change(function () {
                var roomId = $(this).val();
                debugger
                $.ajax({
                    type: "post",
                    url: "/Bookings/GetRoomList?BuildingId=" + roomId,
                    contentType: "html",
                    success: function (response) {
                        debugger
                        $("#RoomId").empty();
                        $("#RoomId").append(response);
                    }
                })
            })
        })

        @* Back button *@
        function goBack() {
        window.history.back();
        }

        @*
        $(document).ready(function () {
            $("#RoomId").change(function () {
                 Alert message displaying the selected values in browser
                var displayRoomName = document.getElementById("RoomId");
                alert("The selected room Id is: " + displayRoomName.options[displayRoomName.selectedIndex].value + " and the room name is: " + displayRoomName.options[displayRoomName.selectedIndex].text);

                Send RoomId selected value to controller as a parameter
                @*$(this).closest("form").submit();
            })
        })
        *@
    </script>
}